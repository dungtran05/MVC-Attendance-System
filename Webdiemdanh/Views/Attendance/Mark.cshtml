@{
    ViewBag.Title = "Điểm danh nhiều sinh viên";
    var sessionId = Context.Request.Query["sessionId"];
}

<input type="hidden" id="sessionId" value="@sessionId" />

<h2>🎥 Điểm danh nhiều sinh viên qua Webcam</h2>

<video id="video" width="400" autoplay></video>
<br />
<button id="start" class="btn btn-success mt-2">🚀 Bắt đầu điểm danh</button>
<canvas id="canvas" width="400" height="300" style="display:none;"></canvas>
<div id="result" class="mt-3 text-info"></div>

@section Scripts {
    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const resultDiv = document.getElementById('result');
        const sessionId = document.getElementById('sessionId').value;
        const startButton = document.getElementById('start');

        let detected = new Set();

        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => video.srcObject = stream)
            .catch(err => resultDiv.innerText = "❌ Không thể mở webcam: " + err);

        async function sendFrame() {
            const ctx = canvas.getContext('2d');
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            ctx.drawImage(video, 0, 0);

            const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));

            const formData = new FormData();
            formData.append("image", blob, "frame.jpg");

            try {
                const response = await fetch("http://localhost:5000/verify", {
                    method: "POST",
                    body: formData
                });
                const data = await response.json();

                if (data.predictions) {
                    for (const pred of data.predictions) {
                        const name = pred.class_name;
                        if (!detected.has(name)) {
                            detected.add(name);
                            resultDiv.innerHTML += `✅ Nhận diện: ${name}<br/>`;

                            // Gửi điểm danh lên .NET Core backend
                            const payload = {
                                sessionId: parseInt(sessionId),
                                verifiedByFace: true,
                                studentName: name // giả định backend hỗ trợ theo tên
                            };

                            await fetch("/Attendance/CheckInByName", {
                                method: "POST",
                                headers: { "Content-Type": "application/json" },
                                body: JSON.stringify(payload)
                            });
                        }
                    }
                }
            } catch (err) {
                console.error("❌ Lỗi gửi ảnh:", err);
            }
        }

        startButton.onclick = async () => {
            resultDiv.innerHTML = "🔍 Đang quét trong 10 giây...";
            detected.clear();

            let count = 0;
            const interval = setInterval(async () => {
                await sendFrame();
                count++;
                if (count >= 10) {
                    clearInterval(interval);
                    resultDiv.innerHTML += "<br/>✅ Quét xong.";
                }
            }, 1000);
        };
    </script>
}
